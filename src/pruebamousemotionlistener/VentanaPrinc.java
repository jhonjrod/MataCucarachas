/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pruebamousemotionlistener;

import Hilos.DibujarAplastada;
import Hilos.GameOver;
import Hilos.MoverCucaracha;
import Hilos.MoverCucaracha2;
import Hilos.MoverCucaracha3;
import Hilos.MoverCucaracha4;
import java.awt.Cursor;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author Milton Rodriguez
 */
public class VentanaPrinc extends javax.swing.JFrame implements MouseMotionListener, MouseListener {
    //private int posicionx;
    //private int posiciony;
    private ImageIcon iconpreparado = new ImageIcon(getClass().getResource("/imagenes/preparado.png"));//icono para los joptionpane
    private ImageIcon iconpegar = new ImageIcon(getClass().getResource("/imagenes/pegar.png"));
    private ImageIcon iconaplastada = new ImageIcon(getClass().getResource("/imagenes/cucaracha aplastada.png"));
    private int umbral = 30;
    

    /**
     * Creates new form VentanaPrinc
     */
    public VentanaPrinc() {
        initComponents();
        addMouseMotionListener(this);
        addMouseListener(this);
        
        // Crear un cursor invisible
        Cursor invisibleCursor = Toolkit.getDefaultToolkit().createCustomCursor(
                new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB),
                new Point(0, 0), "invisibleCursor");
        
        // Configurar el cursor invisible en el JFrame
        getContentPane().setCursor(invisibleCursor);
        
        
        
        MoverCucaracha m = new MoverCucaracha(this);
        m.start();
        
        MoverCucaracha2 m2 = new MoverCucaracha2(this);
        m2.start();
        
        MoverCucaracha3 m3 = new MoverCucaracha3(this);
        m3.start();
        
        MoverCucaracha4 m4 = new MoverCucaracha4(this);
        m4.start();
        
        GameOver g = new GameOver();
        g.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblmanzana = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblmanzana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/preparado.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(472, Short.MAX_VALUE)
                .addComponent(lblmanzana)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblmanzana)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrinc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblmanzana;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseDragged(MouseEvent e) {//se ejecuta repetidamente mientras arrastre el mouse presionando un boton del mouse
        
        /*if(e.getPoint() != puntomousesolto){
        //puntomouseactual = e.getPoint();
        //System.out.println("a");
        
            return;
            
        }
        lblmanzana.setLocation(e.getPoint());
        System.out.println("es igual");*/
        lblmanzana.setLocation(e.getPoint());
        
        
    }

    @Override
    public void mouseMoved(MouseEvent e) {//se ejecuta repetidamente mientras arrastre el mouse sin tener presionado ningun boton del mouse
        //System.out.println("b");
        //puntomouseactual = e.getPoint();
        lblmanzana.setLocation(e.getPoint());
        //System.out.println("Coordenadas para donde poner la cucaracha: X ="+e.getX()+", Y = "+e.getY());
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        //lblmanzana.setIcon(iconpegar);
        //System.out.println("Coordenadas para donde poner la cucaracha: X ="+e.getX()+", Y = "+e.getY());
        /*Coordenadas para donde poner la cucaracha: X =10, Y = 40

        Coordenadas para donde poner la cucaracha: X =14, Y = 122
        
        Coordenadas para donde poner la cucaracha: X =16, Y = 203
        
        Coordenadas para donde poner la cucaracha: X =15, Y = 309*/
        
        //IR A LA DERECHA AUMENTA X, IR PARA ABAJO AUMENTA Y. para programar el movimiento de la cucaracha en el hilo.
        ArrayList<Double> distancias = new ArrayList<Double>();
        
        for(JLabel j : MoverCucaracha.cucarachas){
            distancias.add(j.getLocation().distance(e.getPoint()));
        }
        
        JLabel cucarach_eliminar = new JLabel();
        
        for(Double d : distancias){
            if(d < umbral){
                for(JLabel j : MoverCucaracha.cucarachas){
                    if(j.getLocation().distance(e.getPoint()) == d && j.getIcon() != null){
                        j.setIcon(null);
                        remove(j);
                        revalidate();
                        repaint();
                        cucarach_eliminar = j;
                        DibujarAplastada hilo = new DibujarAplastada(iconaplastada, e, this);
                        hilo.start();
                    }
                }
                MoverCucaracha.cucarachas.remove(cucarach_eliminar);
            }
        }
        
        
        //System.out.println("dio click");
        /*JLabel j = new JLabel();
        add(j);
        j.setIcon(iconaplastada);
        j.setBounds(e.getX(), e.getY(), 180, 95);
        j.setLocation(e.getPoint());*/
        /*try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            Logger.getLogger(VentanaPrinc.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        //j.setIcon(null);
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        System.out.println("presionando el mouse....");
        lblmanzana.setIcon(iconpegar);
    }

    @Override
    public void mouseReleased(MouseEvent e) {//Se ejecuta cuando suelta el click del mouse (izquierdo o derecho)
        System.out.println("solto el click del mouse");
        lblmanzana.setIcon(iconpreparado);
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }
    
    
}
